Ques: Given an array of N elements, where each element is at most K away from its target position, devise an 
algorithm that sorts in O(N log K) time.

Input: arr[] = {6, 5, 3, 2, 8, 10, 9}, K = 3 
Output: arr[] = {2, 3, 5, 6, 8, 9, 10}

Input: arr[] = {10, 9, 8, 7, 4, 70, 60, 50}, k = 4
Output: arr[] = {4, 7, 8, 9, 10, 50, 60, 70}

Soln:


public static void Klarg(int[] arr, int k){
        PriorityQueue<Integer> pq = new PriorityQueue<>();
        
        for(int i=0;i<=k;i++){
            pq.add(arr[i]);
        }
        
        for(int i=k+1;i<arr.length;i++){
            System.out.println(pq.remove());
            pq.add(arr[i]);
        }
        
        while(pq.size()>0){
            System.out.println(pq.remove());
        }
        
    }

